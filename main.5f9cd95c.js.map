{"version":3,"sources":["js/main.js"],"names":["selectElement","document","querySelector","addEventListener","event","datasetUrlInput","fetch","value","then","response","json","map","zippedStats","rest","attribute","flat","parsed","Tabulator","height","layout","groupToggleElement","groupStartOpen","groupBy","initialSort","column","dir","groupHeader","count","data","group","totalEarnings","formatDate","forEach","item","amount","Date","Number","parseFloat","toPrecision","toFixed","columns","title","width","field","hozAlign","sorter","formatter","cell","formatterParams","onRendered","getValue","convertedDate","headerFilter","dateFilterEditor","headerFilterFunc","dateFilterFunction","editor","topCalc","align","mutator","views","internalReferrerViews","values","calcParams","calc","totalTime","luxon","Duration","fromMillis","shiftTo","days","toFormat","substr","formatHumanSecondsDuration","topCalcParams","precision","topCalcFormatter","topCalcFormatterParams","decimal","thousand","symbol","table","fieldEl","getElementById","typeEl","valueEl","updateFilter","filterVal","options","selectedIndex","typeVal","setFilter","clearFilter","success","cancel","editorParams","container","createElement","innerHTML","inputs","getElementsByTagName","Array","from","elem","setAttribute","e","buildDateString","target","key","headerValue","rowValue","rowData","filterParams","format","start","DateTime","fromFormat","end","isValid","date","getFullYear","getMonth","slice","getDate","duration"],"mappings":"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","file":"main.5f9cd95c.js","sourceRoot":"..","sourcesContent":["const selectElement = document.querySelector(\"#dataset-url-submit\");\n\nselectElement.addEventListener(\"click\", (event) => {\n    const datasetUrlInput = document.querySelector(\"#dataset-url\");\n\n    fetch(`${datasetUrlInput.value}`)\n    .then((response) => response.json())\n    .then((json) => json.map(({zippedStats, ...rest}) => \n            zippedStats.map(attribute => ({...rest, ...attribute}))).flat())\n    .then(parsed => new Tabulator(\"#example-table\", {\n        height:\"1000\",\n        layout:\"fitDataTable\",\n        groupToggleElement:\"header\",\n        groupStartOpen:true,\n        groupBy: \"periodStartedAt\",\n        initialSort:[\n            {column:\"periodStartedAt\", dir:\"desc\"}, //sort by this first\n        ],\n        groupHeader: function (value, count, data, group) {\n            let totalEarnings = 0;\n            data.forEach((item) => {\n                if (item.amount > 0) {\n                    totalEarnings += item.amount;\n                }\n            });\n    \n            return formatDate(new Date(Number(value))) + ` - $${parseFloat(totalEarnings.toPrecision(3)).toFixed(2)}`;\n        },\n        columns: [\n            {title:\"Date\", width:200, field:\"periodStartedAt\", hozAlign:\"center\", sorter:\"number\", formatter: function (cell, formatterParams, onRendered) {\n                if (cell.getValue()) {\n                    let convertedDate = formatDate(new Date(Number(cell.getValue())));\n                    return convertedDate;\n                }},\n                headerFilter:dateFilterEditor, headerFilterFunc:dateFilterFunction\n            },\n        \n            {title:\"Title\", field:\"title\", editor:\"input\", headerFilter:true},\n            {title:\"Link\", field:\"link\",  formatter: function (cell, formatterParams, onRendered) {\n                return `<a class=\"tableLink\" href=\"${ cell.getValue()}\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"Medium stats page\">Go to stats</a>`;\n            },},\n            {title:\"Views\", field:\"views\", topCalc: \"sum\"},\n            { title:\"External views\", sorter:\"number\", field:\"external_views\",topCalc: \"sum\", align: \"right\", mutator:function(value, data) {\n                    return data.views - data.internalReferrerViews;\n                } \n            },\n            {title: \"Internal views\", field:\"internalReferrerViews\", topCalc: \"sum\"},\n            {title: \"Member time reading (s)\", field:\"memberTtr\",\n                topCalc: function (values, data, calcParams) {\n                    let calc = 0;\n                    values.forEach(function (value) {\n                        calc += value;\n                    });\n                    \n                    totalTime = luxon.Duration.fromMillis(calc * 1000).shiftTo('days', 'hours', 'minutes', 'seconds');\n        \n                    if (totalTime.days === 0) return totalTime.toFormat('hh:mm:ss');\n                    else return totalTime.days + 'd ' + totalTime.toFormat('d hh:mm:ss').substr(2);\n                },\n                formatter: formatHumanSecondsDuration,},\n            {title: \"Amount\", field:\"amount\", topCalc: \"sum\", topCalcParams: { precision: 2 },\n                topCalcFormatter: \"money\",\n                topCalcFormatterParams: {\n                    decimal: \".\",\n                    thousand: \",\",\n                    symbol: \"$\",\n                    precision: 2,\n                },\n                formatter: \"money\",\n                formatterParams: {\n                    decimal: \".\",\n                    thousand: \",\",\n                    symbol: \"$\",\n                    precision: 2,\n                }},\n\n            \n        ],\n        data: parsed\n    })).then(table => {\n        //Define variables for input elements\n        var fieldEl = document.getElementById(\"filter-field\");\n        var typeEl = document.getElementById(\"filter-type\");\n        var valueEl = document.getElementById(\"filter-value\");\n\n\n        //Trigger setFilter function with correct parameters\n        function updateFilter() {\n            var filterVal = fieldEl.options[fieldEl.selectedIndex].value;\n            var typeVal = typeEl.options[typeEl.selectedIndex].value;\n\n            table.setFilter(filterVal, typeVal, valueEl.value);\n        }\n\n        //Update filters on value change\n        document.getElementById(\"filter-field\").addEventListener(\"change\", updateFilter);\n        document.getElementById(\"filter-type\").addEventListener(\"change\", updateFilter);\n        document.getElementById(\"filter-value\").addEventListener(\"keyup\", updateFilter);\n\n        //Clear filters on \"Clear Filters\" button click\n        document.getElementById(\"filter-clear\").addEventListener(\"click\", function() {\n            fieldEl.value = \"\";\n            typeEl.value = \">\";\n            valueEl.value = \"\";\n\n            table.clearFilter();\n        });\n\n    })\n   \n});\n\n//custom header filter\nvar dateFilterEditor = function(cell, onRendered, success, cancel, editorParams){\n\n\tvar container = document.createElement(\"span\")\n\t//create and style input\n\tvar domString = \"<input type='date' placeholder='Start'/>&nbsp;<input type='date' placeholder='End'/>\";\n    container.innerHTML = domString;\n\n\tvar inputs = container.getElementsByTagName(\"input\");\n\n\n\tArray.from(inputs).forEach(elem => {\n        elem.setAttribute(\"style\", \"padding:4px; width:50%;box-sizing:border-box\")\n    });\n    \n    inputs[0].addEventListener('change', function(e){\n        success(buildDateString(e.target.value, inputs[1].value));\n    });\n    inputs[0].addEventListener('keydown', function(e){\n        if(e.key === 'Enter'){\n            success(buildDateString(e.target.value, inputs[1].value));\n        }\n\n        if(e.key == \"Escape\"){\n            cancel();\n        }        \n    });\n\tinputs[1].addEventListener('change', function(e){\n        success(buildDateString(inputs[0].value, e.target.value,));\n    });\n    inputs[1].addEventListener('keydown', function(e){\n        if(e.key === 'Enter'){\n            success(buildDateString(inputs[0].value, e.target.value));\n        }\n\n        if(e.key == \"Escape\"){\n            cancel();\n        }        \n    });\n\n\treturn container;\n}\n\n//custom filter function\nfunction dateFilterFunction(headerValue, rowValue, rowData, filterParams){\n    //headerValue - the value of the header filter element\n    //rowValue - the value of the column in this row\n    //rowData - the data for the row being filtered\n    //filterParams - params object passed to the headerFilterFuncParams property\n\n   \tvar format = filterParams.format || \"y-LL-dd\";\n   \n \n    var start = luxon.DateTime.fromFormat(headerValue.start, format);\n   \tvar end = luxon.DateTime.fromFormat(headerValue.end, format);\n   \tif(rowValue){\n   \t\tif(start.isValid){\n   \t\t\tif(end.isValid){\n   \t\t\t\treturn rowValue >= start && rowValue <= end;\n   \t\t\t} else {\n   \t\t\t\treturn rowValue >= start;\n   \t\t\t}\n   \t\t} else {\n   \t\t\tif(end.isValid){\n   \t\t\t\treturn rowValue <= end;\n   \t\t\t}\n   \t\t}\n   \t}\n\n    return false; //must return a boolean, true if it passes the filter.\n}\n\n\nfunction buildDateString(start, end){\n    return {\n        start,\n        end,\n    };\n}\n\nfunction formatDate(date) {\n    return date.getFullYear() + \"-\" +\n        ('0' + (date.getMonth() + 1)).slice(-2) + \"-\" +\n        ('0' + date.getDate()).slice(-2);\n}\n\n\nconst formatHumanSecondsDuration = function (cell) {\n    duration = luxon.Duration.fromMillis(cell.getValue() * 1000).shiftTo('days', 'hours', 'minutes', 'seconds');\n\n    if (duration.days === 0) {\n        return duration.toFormat('hh:mm:ss');\n    } else return duration.days + 'd ' + duration.toFormat('d hh:mm:ss').substr(2);\n}"]}